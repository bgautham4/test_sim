#ifndef UTILS_H
#define UTILS_H

#include "units.h"
#include <cmath>
#include <cstddef>
#include <initializer_list>
#include <unordered_map>
#include <utility>

struct LUT {
	using samples_t = std::initializer_list<std::pair<int, double>>;
	using lut_entry_t = std::unordered_map<int, double>;
	LUT() = default;
	LUT(const samples_t& prefill_samples, const samples_t& decode_samples) {
		populate_prefill_lut(prefill_samples);
		populate_decode_lut(decode_samples);
	}
	~LUT() = default;

	auto populate_prefill_lut(const samples_t& sample_points) -> void {
		auto it = std::begin(sample_points);
		auto it_next = std::next(std::begin(sample_points));
		for (; it_next != std::end(sample_points); ++it,++it_next) {
			auto [x1, a] = *it;
			auto [x2, b] = *it_next;
			prefill_entries[x1] = a;
			prefill_entries[x2] = b;
			auto x = x1;
			while ( ++x < x2) {
				auto x_normed = static_cast<double>(x - x1) / (x2 - x1);
				prefill_entries[x] = std::lerp(a, b, x_normed);
			}
		}
	}

	auto populate_decode_lut(const samples_t& sample_points) -> void {
		auto it = std::begin(sample_points);
		auto it_next = std::next(std::begin(sample_points));
		for (; it_next != std::end(sample_points); ++it,++it_next) {
			auto [x1, a] = *it;
			auto [x2, b] = *it_next;
			decode_entries[x1] = a;
			decode_entries[x2] = b;
			auto x = x1;
			while ( ++x < x2) {
				auto x_normed = static_cast<double>(x - x1) / (x2 - x1);
				decode_entries[x] = std::lerp(a, b, x_normed);
			}
		}
	}

	auto get_prefill_time_for(int x) const {
		auto rate = prefill_entries.at(x); /*Throw if not found */
		auto t_seconds = x*100 / rate;
		return ps_from(TimeUnits::S, t_seconds); 
	}

	auto get_decode_time_for(int x) const {
		auto rate =  decode_entries.at(x);
		auto t_seconds = x / rate;
		return ps_from(TimeUnits::S, t_seconds); 
	}

	lut_entry_t prefill_entries, decode_entries;
};

inline constexpr std::initializer_list<std::pair<int, double>> decode_samples{
	{1,135.116515},
	{2,276.737528},
	{4,527.951382},
	{8,838.963301},
	{16,1571.370742},
	{32,2418.451325},
	{64,3265.556550},
	{128,3886.732633}
};

inline constexpr std::initializer_list<std::pair<int, double>> prefill_samples{
	{1,1172.098398},
	{2,2526.265621},
	{4,5830.323197},
	{8,3860.049710},
	{16,8081.466581},
	{32,8917.405230},
	{64,14077.378926},
	{128,17056.712706}
};

inline LUT LOOKUP_TABLE(prefill_samples, decode_samples);

#endif
